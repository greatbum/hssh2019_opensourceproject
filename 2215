전체 프로젝트 공유 : https://bit.ly/2ZaI9sJ

0. 학번 : 2215

[프로젝트 1 : 국밥계산기의 그릇수 반올림]
1)연구소 이름 : 77ㅓ억 연구소
2)연구소가 해결하려는 문제 : 현재 자산관리에 어려움을 겪고 있는 모든사람(우리는 특별히 산체스를 대표로 선정하였다)
3)연구소의 깃헙 링크 : https://github.com/chanbum0613/-
4)내가 기여한 내용
def gukbabchung(n):
    if ((n/7000)-int(n/7000))>1/2:
        return int(n/7000)+1
    else:
        return int(n/7000)
n=int(input("당신이 m년 뒤 받을 돈을 입력해 주십시오"))
print("그 돈이면 국밥",gukbabchung(n),"그릇을 먹겠다")
5)내가 기여한 내용에 대한 설명
예를 들어, 12000원의 경우, 사실상 국밥 두 그릇을 먹을 수 있지만, 내림 시스템때문에 그렇지 않다. 따라서, 반올림시스템을 적용하였다. 
6)내가 기여한 내용의 반영 여부 : X



[프로젝트 2 : 화학반응식의 계수 맞추는 알고리즘 수정]
1)연구소 이름 : 세균맨의 연구소
2)연구소가 해결하려는 문제 :화학반응식의 계수맞추는데 어려움을 겪고 있는 호빵맨
3)연구소의 깃헙 링크 : https://github.com/thy0815/2-1-
4)내가 기여한 내용

    #3. 생성물의 입력받은 분자 순서대로 알파벳순으로 계수(미지수)를 지정해준다.
    --> 이렇게 알파벳으로 지정한다면, 반응물, 생성불의 계수에 따라서 매번 코드를 수정해야 한다. 따라서, 처음부터 미지수의  list를 만든 후 연립방정식 프로그램을 사용하여야 한다.
    #6.  각 원소별로 list를 각각 만들고, 새로운 list에 append 한다. 이때, 계수가 뒤로 가도록 하고, (예 : CO2 -> C: 1a, O: 2a) 각 list들을 반응물과 생성물로 나누어 각각이 반응물list, 생성물list에 들어가도록 한다.  
    --> 나누는 코드를 실제로 만들면, 위치를 분리하기 위해 딕셔너리를 쓰는것이 편하다.

5)내가 기여한 내용에 대한 설명
리스트를 사용할때, 계수 맞추기 프로그램의 문제점을 지적하였다.
6)내가 기여한 내용의 반영 여부 : X

[프로젝트 3 : 영의 슬릿실험에 따른 밝기 그래프를 실험없이 보여주는 프로그램의 코드 수정]
1)연구소 이름 : 고충연구소
2)연구소가 해결하려는 문제 :물리시간에 실험을 하느라 시간을 많이 써야 하지만 진도가 급해 시간이 아까운 물리 선생님
3)연구소의 깃헙 링크 :https://github.com/09m1jh/python27_2019/tree/master
4)내가 기여한 내용
import matplotlib.pyplot as plt
import math
import numpy as np
n = input('슬릿 개수를 입력해주세요') # 파장 변수: 위상차, 진폭, 파장
if int(n) > 2:
    print('아직 해결할 수 없는 문제입니다.')
else:
    d = float(input('슬릿 두께를 입력해주세요'))*10**-6
    ramda = 750 * (10**-9)
    k = 2*math.pi/ramda 
    L = 1
    if int(1//d)>>1000:
        if int(n) == 1 :
            x = np.linspace(-10,-0.1,100) + np.linspace(0.1,10,100)
            y = [((math.sin((k*d*i)/((L**2+i**2)**0.5)/2)**2)/((k*d*i/(L**2+i**2)**0.5/2)**2)) for i in x]
            plt.plot(x,y)
            plt.show()
        if int(n) == 2 :
            a = float(input('슬릿 사이 간격을 입력해주세요'))*10**-2 
            x = np.linspace(-10,-0.1,100) + np.linspace(0.1,10,100)
            y = [((math.sin((k*d*i)/((L**2+i**2)**0.5)/2)**2)/((k*d*i/(L**2+i**2)**0.5/2)**2))*(math.cos(k*a*i/(L**2+i**2)**0.5/2)**2) for i in x]
            plt.plot(x,y)
            plt.show()
    else:
        print('아직 해결할 수 없는 문제입니다.')
5)내가 기여한 내용에 대한 설명
실제로 실험을 해보면, D가 L 보다 매우 작지 않으면, 무늬가 규칙적으로 나타나지 않아서 D의 크기에 따라서 실험이 불가능한 경우가 있다.
따라서 이 경우에 실험불가하다는 안내문이 출력되도록 했다.
6)내가 기여한 내용의 반영 여부 : x
